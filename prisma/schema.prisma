// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Property {
  property_id       String            @id @default(uuid()) @db.Uuid
  name              String
  description       String            @db.Text
  map_location      String?           @db.Text
  address           String            @db.Text
  area              String
  city              String
  state             String
  country           String
  accommodationType AccommodationType @default(ENTIRE_HOME)
  themes            PropertyTheme[]
  checkin_time      String
  checkout_time     String
  maxcapacity       Int
  bedroomcount      Int
  mealsAvailable    Boolean           @default(true)
  created_at        DateTime          @default(now()) @db.Timestamp(6)

  Unit              Unit[]
  PropertyImage     PropertyImage[]
  PropertyAmenity   PropertyAmenity[]
  NearByAttractions NearByAttractions[]
  FoodMenu          FoodMenu[]
  propertyRules     PropertyRule[]
}

model Unit {
  unit_id           String    @id @default(uuid()) @db.Uuid
  property_id       String    @db.Uuid
  unit_type         UnityType @default(VILLA)
  title             String?
  description       String?
  no_of_bedrooms    Int?
  no_of_restrooms   Int?
  is_pool_available Boolean   @default(true)
  max_capacity      Int?
  is_available      Boolean   @default(true)
  created_at        DateTime  @default(now())

  property   Property?   @relation(fields: [property_id], references: [property_id])
  unitImages UnitImage[]

  @@map("Unit")
}

model HouseRule {
  rule_id     String  @id
  description String?

  propertyRules PropertyRule[]

  @@map("HouseRule")
}

model PropertyRule {
  property_id   String @db.Uuid
  rule_id       String
  display_order Int    @default(0)

  property  Property  @relation(fields: [property_id], references: [property_id])
  houseRule HouseRule @relation(fields: [rule_id], references: [rule_id])

  @@id([property_id, rule_id])
}

model Amenity {
  amenity_id String @id
  name       String

  propertyAmenities PropertyAmenity[]
}

model PropertyAmenity {
  property_id   String @db.Uuid
  amenity_id    String
  display_order Int    @default(0)

  property Property @relation(fields: [property_id], references: [property_id])
  amenity  Amenity  @relation(fields: [amenity_id], references: [amenity_id])

  @@id([property_id, amenity_id])
  @@map("PropertyAmenity")
}

model ImageCategory {
  category_id Int    @id @default(autoincrement())
  name        String @unique

  images Image[]
}

model Image {
  image_id          String  @id @default(uuid()) @db.Uuid
  image_url         String
  image_alt         String?
  image_category_id Int?

  imageCategory ImageCategory?  @relation(fields: [image_category_id], references: [category_id])
  PropertyImage PropertyImage[]
  UnitImage     UnitImage[]

  @@unique([image_category_id, image_url])
}

model PropertyImage {
  image_id          String  @db.Uuid
  property_id       String  @db.Uuid
  display_order     Int     @default(0)
  is_banner_image   String?
  is_carousel_image String?

  property Property? @relation(fields: [property_id], references: [property_id])
  image    Image?    @relation(fields: [image_id], references: [image_id])

  @@id([image_id, property_id])
}

model UnitImage {
  image_id        String  @db.Uuid
  unit_id         String  @db.Uuid
  display_order   Int     @default(0)
  is_banner_image String?

  unit  Unit?  @relation(fields: [unit_id], references: [unit_id])
  image Image? @relation(fields: [image_id], references: [image_id])

  @@id([image_id, unit_id])
}

model NearByAttractions {
  attraction_id String @id @default(uuid()) @db.Uuid
  property_id   String @db.Uuid
  title         String
  description   String
  imageUrl      String
  distance      String

  property Property? @relation(fields: [property_id], references: [property_id])
}

model FoodMenu {
  menuId        String  @id @default(uuid()) @db.Uuid
  property_id   String  @db.Uuid
  description   String
  isVeg         Boolean
  isNonVeg      Boolean
  menuUrl       String
  breakfastTime String
  lunchTime     String
  dinnerTime    String
  highteaTime   String

  property Property? @relation(fields: [property_id], references: [property_id])
}

model Theme {
  theme_id   String          @id
  name       String
  properties PropertyTheme[]
}

model PropertyTheme {
  property_id  String  @db.Uuid
  theme_id     String
  propertyName String?

  property Property @relation(fields: [property_id], references: [property_id])
  theme    Theme    @relation(fields: [theme_id], references: [theme_id])

  @@id([property_id, theme_id])
}

enum UnityType {
  VILLA
  CHALET
  COTTAGE
  ROOM
  APARTMENT
}

enum AccommodationType {
  ENTIRE_HOME
  SEPARATE_ROOMS
  ENTIRE_HOME_AND_SEPARATE_ROOMS
}
